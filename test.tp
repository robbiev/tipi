(def list (func elems elems))
(def and (func (a b) (if a (if b true false) false)))
(def not (func (a) (if a false true)))
(list 2 3 4)
(list)
(+ 1 (+ 2 (* 3 4)))
(do (+ 1 (+ 2 (* 3 4))) (+ 2 3))
(do (def x 2) (* x 4))
(if (> 1 2) (* 2 4) (* 2 8))
(do (def f (func (x) (* 2 x))) (f 10))
(do (def max (func (x y) (if (> x y) x y))) (max 11 21))
(quote (1 2 3))
(quote (1 (2 3)))
(quote (do (def x 2) (* x 4)))
(first (quote (1 2 3)))
(rest (quote (1 2 3)))
(cons 1 (quote (2 3)))
(cons 1 (cons 2 (cons 3 (quote ()))))
(def range (func (a b) (if (= a b) (quote ()) (cons a (range (+ a 1) b)))))
(range 1 20)
(and (= 1 1) (= 1 2))
(and (= 1 1) (= 2 2))
(not (and (= 1 1) (= 2 2)))
(math.Max 5.0 6.0)
